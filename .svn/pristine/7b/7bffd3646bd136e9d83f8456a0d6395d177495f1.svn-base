$(function () {
  //27.	报警次数前十设备
  $.ajax({
    type: 'get',
    url: url + 'alarmTop10',
    data: 'username=' + username,
    error: function (error) {
      console.log(error)
    },
    success: function (res) {
      console.log(res)
      var html='';
      $.each(res,function(i,v){
        html+=`<tr>
        <td>${v.device_name}</td>
        <td>${v.adss}</td>
        <td>${v.alarmNum}</td>
        <td>${v.alarmTime}</td>
    </tr>`
      })
      $('#alarm10').html(html)
    }
  })
  //28.	最近十次报警
  $.ajax({
    type: 'get',
    url: url + 'alarmLately10',
    data: 'username=' + username,
    error: function (error) {
      console.log(error)
    },
    success: function (res) {
      console.log(res)
      var html='';
      $.each(res,function(i,v){
        html+=`<li style='position: relative;'>
        <i class='timeLog'></i>
        <div style='padding-left: 20px;width:93%;height:170px;'>
            <h3 style='font-size: 14px;color: #17BC76;display: inline-block;'>${v.alarmFaultDate}
            </h3>
            <span style='position: relative;right: -25px;'>
                <img src="./image/xiuli.png" alt="" style='width:6%'>处理
                <img src="./image/tubiao.png" alt="" style='width:6%'>趋势
            </span>
            <ul>
                <li style='height:25px'>设备编号:${v.imei}</li>
                <li style='height:25px'>设备名称:${v.device_name}</li>
                <li style='height:25px'>设备类型:${v.dType}</li>
                <li style='height:25px'>报警类型:温度报警</li>
                <li style='height:25px'>报警值:${v.alarmValue}</li>
            </ul>
        </div>
    </li>`
      })
      $('#alarmLately10').html(html)
    }
  })
  //首页设备统计报警占比
  $.ajax({
    type: 'get',
    url: url + 'pushStatistics',
    data: 'username=' + username,
    error: function (error) {
      console.log(error)
    },
    success: function (res) {
      console.log(res)
      var alar = res.alar
      var normal = res.normal
      var dom = document.getElementById("leftYuan");
      var myChart = echarts.init(dom);
      var app = {};
      option = null;
      option = {
        tooltip: {
          show: 'false',
          trigger: 'item',
          formatter: '{a} <br/>{b}: {c} ({d}%)'
        },
        legend: {
          right: 80,
          bottom: 10,
          textStyle: {
            color: '#fff'
          },
          data: ['正常', '报警']
        },
        grid: {
          left: 10,
          top: '10%',
          right: '10%'
        },
        series: [{
          name: '设备状态',
          type: 'pie',
          radius: ['40%', '50%'],
          center: ["29%", "50%"],
          avoidLabelOverlap: true, //是否启用防止标签重叠策略
          hoverAnimation: false, //是否开启 hover 在扇区上的放大动画效果。
          label: {
            normal: {
              padding: [2, 8],
              color: '#fff',
              padding: [0, -10], //取消hr线跟延长线之间的间隙
              rich: {
                a: {
                  color: '#999',
                  lineHeight: 20, //设置最后一行空数据高度，为了能让延长线与hr线对接起来
                  align: 'center'
                },
                hr: { //设置hr是为了让中间线能够自适应长度
                  borderColor: 'auto', //hr的颜色为auto时候会主动显示颜色的
                  width: '105%',
                  borderWidth: 0.5,
                  height: 0.5,
                },
                per: { //用百分比数据来调整下数字位置，显的好看些。如果不设置，formatter最后一行的空数据就不需要
                  padding: [4, 0],
                }
              }
            }

          },
          labelLine: {
            normal: {
              length: 5,
            }
          },
          data: [{
              value: normal,
              name: '正常'
            },
            {
              value: alar,
              name: '报警'
            },
          ]
        }]
      };
      myChart.setOption(option, true);
    }
  })
  //首页统计报警类型占比
  $.ajax({
    type: 'get',
    url: url + 'pushAlarmType',
    data: 'username=' + username,
    error: function (error) {
      console.log(error)
    },
    success: function (res) {
      console.log(res)
      var data = res.mess;
      var name = [];
      var num = [];
      var value = []
      $.each(data, function (i, v) {
        name.push(v.name)
        num.push(v.num)
        value.push({
          value: v.num,
          name: v.name
        })
      })
      var dom = document.getElementById("rightYuan");
      var myChart = echarts.init(dom);
      var app = {};
      option1 = null;
      option1 = {
        tooltip: {
          show: 'false',
          trigger: 'item',
          formatter: '{a} <br/>{b}: {c} ({d}%)'
        },
        legend: {
          orient: 'vertical',
          right: 10,
          bottom: 10,
          textStyle: {
            color: '#fff'
          },
          data: name
        },
        grid: {
          left: 10,
          top: '10%',
          right: '10%'
        },
        series: [{
          name: '设备状态',
          type: 'pie',
          radius: ['40%', '50%'],
          center: ["40%", "50%"],
          avoidLabelOverlap: true, //是否启用防止标签重叠策略
          hoverAnimation: false, //是否开启 hover 在扇区上的放大动画效果。
          label: {
            normal: {
              padding: [2, 8],
              color: '#fff',
              padding: [0, -10], //取消hr线跟延长线之间的间隙
              formatter: "{a|{b}:{d}%}",
              rich: {
                a: {
                  color: '#fff',
                  lineHeight: 20, //设置最后一行空数据高度，为了能让延长线与hr线对接起来
                  align: 'center'
                },
                hr: { //设置hr是为了让中间线能够自适应长度
                  borderColor: 'auto', //hr的颜色为auto时候会主动显示颜色的
                  width: '105%',
                  borderWidth: 0.5,
                  height: 0.5,
                },
              }
            }

          },
          labelLine: {
            normal: {
              length: 5,
            }
          },
          data: value
        }]
      };
      myChart.setOption(option1, true);
    }
  })
  //首页七天报警分析
  $.ajax({
    type: 'get',
    url: url + 'alarmTopByDay',
    data: 'username=' + username,
    error: function (error) {
      console.log(error)
    },
    success: function (res) {
      console.log(res)
      var time=[];
      var data=[];
      $.each(res,function(i,v){
        time.push(v.alarmTime)
        data.push(v.value)
      })
      var dom = document.getElementById("bottomZhe");
      var myChart = echarts.init(dom);
      var app = {};
      option3 = null;
      option3 = {
        tooltip: { //提示框组件
          trigger: 'axis', //触发类型。
          textStyle: {
            color: '#fff',
          },
          axisPointer: { //配置坐标轴指示器的快捷方式
            type: 'shadow', // 阴影指示器
            label: { //坐标轴指示器的文本标签。
              show: true, //是否显示文本标签。
              backgroundColor: '#062F2B',
            },
            // shadowStyle:{
            //   backgroundColor:'#062F2B',
            // }
          },

        },
        calculable: true,
        legend: {
          //  data: ['温度', '湿度', '烟雾', '灭火器'], //图例的数据数组
          itemGap: 1, //图例每项之间的间隔,
          textStyle: {
            color: '#fff',
          },
        },
        grid: {
          top: '12%', //grid 组件离容器上侧的距离。
          left: '1%',
          right: '1%',
          containLabel: true //区域是否包含坐标轴的刻度标签。
        },
        xAxis: [{
          type: 'category', //坐标轴类型。,
          axisLine: {
            lineStyle: {
              color: '#fff'
            },
          },
          data: time
        }],
        yAxis: [{
          type: 'value',
          axisLine: {
            lineStyle: {
              color: '#fff'
            },
          },
        }],
        dataZoom: [ //用于区域缩放
          {
            show: true,
            start: 0, //数据窗口范围的起始百分比
            end: 100
          },
          {
            type: 'inside',
            start: 0,
            end: 100
          },
        ],
        series: [{
          name: '隐患值',
          type: 'line',
          smooth: true, //这个是把线变成曲线
          data: data
        }]
      };
      myChart.setOption(option3, true);

    }
  })
})